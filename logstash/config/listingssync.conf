input {
  jdbc {
      #  jdbc_validate_connection => true
      jdbc_connection_string => "jdbc:postgresql://postgres:5432/strapi"
      jdbc_user => "strapi"
      jdbc_password => "strapi"
      jdbc_driver_class => "org.postgresql.Driver"
      jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.2.14.jar"
      schedule => "* * * * *"
      statement => 'SELECT _listings.id, title, description, longitude, latitude, username, "users-permissions_user"."firstName","lastName",email FROM
      (SELECT listings.id as id, title, description, longitude, latitude, "user" FROM listings
      JOIN components_location_geo_coordinates
          ON listings.id = components_location_geo_coordinates.id WHERE "isPublished" = true) AS _listings
      JOIN "users-permissions_user" ON _listings.user = "users-permissions_user".id'
    }
}
filter {
	if [latitude] and [longitude] {
    mutate { convert => {"latitude" => "float"} }
    mutate { convert => {"longitude" => "float"} }
		mutate {
		rename => {
			"latitude" => "[location][lat]"
			"longitude" => "[location][lon]"
      }
    }
    mutate { convert => {"[location]" => "float"} }
	}
}
output {
#   elasticsearch {
#     hosts => ["http://elasticsearch:9200"]
#     index => "users"
#     document_id => "users_%{id}"
#     doc_as_upsert => true
#     #user => "es_user”
#     #password => "es_password”
#  }
#   stdout { codec => json }
  elastic_app_search{
    url => "http://appsearch:3002"
    api_key => "private-17cnfdzo96o93s3h4mo55zu3"
    engine => "listings"
    document_id => "listing_%{id}"
    # patb => "/api/as/v1/engines/users/documents"
  }
}